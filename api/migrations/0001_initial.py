# Generated by Django 4.2.4 on 2023-11-17 06:46

import api.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('age', models.IntegerField(default=18)),
                ('stats', models.JSONField(default=api.models.default_json)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('league', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('league', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='TournamentFixture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_draw', models.BooleanField(default=False)),
                ('is_live', models.BooleanField(default=False)),
                ('location', models.JSONField(default=api.models.default_json)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('team1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team1', to='api.team')),
                ('team2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team2', to='api.team')),
                ('team_won', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_won', to='api.team')),
                ('toss_won', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toss_won', to='api.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stats', models.JSONField(default=api.models.default_json)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inning', models.IntegerField(default=1)),
                ('over', models.IntegerField()),
                ('ball', models.IntegerField()),
                ('runs', models.IntegerField(default=0)),
                ('is_extra', models.BooleanField(default=False)),
                ('extra', models.CharField(max_length=20)),
                ('is_wicket', models.BooleanField(default=False)),
                ('stats', models.JSONField(default=api.models.default_json)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('batsman_at_nonstrike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batsman_at_nonstrike', to='api.tournamentplayer')),
                ('batsman_at_strike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batsman_at_strike', to='api.tournamentplayer')),
                ('batting_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batting_team', to='api.team')),
                ('bowler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bowler', to='api.tournamentplayer')),
                ('bowling_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bowling_team', to='api.team')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tournamentfixture')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.team'),
        ),
    ]
